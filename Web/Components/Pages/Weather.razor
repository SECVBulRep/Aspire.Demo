@page "/weather"
@using Web.Clients
@using Microsoft.AspNetCore.OutputCaching
@using Microsoft.EntityFrameworkCore
@using Web.Db
@inject WeatherApiClient WeatherApiClient;
@inject ApplicationContext ApplicationContext;

@attribute [StreamRendering]
@attribute [OutputCache(Duration = 5)]
<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (forecasts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in forecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>
    
    
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
         
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in ApplicationContext.Users)
        {
            <tr>
                <td>@forecast.Id</td>
                <td>@forecast.Name</td>
              
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await WeatherApiClient.GetForecast();

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        var summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
        {
            Date = startDate.AddDays(index),
            TemperatureC = Random.Shared.Next(-20, 55),
            Summary = summaries[Random.Shared.Next(summaries.Length)]
        }).ToArray();


        for (int i = 0; i < 100; i++)
        {
            ApplicationContext.Users.Add(new User { Id = Guid.NewGuid(), Name = "asda" });
        }

        await ApplicationContext.SaveChangesAsync();
    }


}